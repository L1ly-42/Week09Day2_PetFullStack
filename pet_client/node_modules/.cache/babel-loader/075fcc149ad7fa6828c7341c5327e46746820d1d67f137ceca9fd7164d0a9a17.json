{"ast":null,"code":"var _jsxFileName = \"/Users/leilapeltier/Documents/bnta_work/week09/day2/task_pets/pet_client/src/containers/PetContainer.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport AddPetForm from \"../components/AddPetForm\";\nimport PetList from \"../components/PetList\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PetContainer = () => {\n  _s();\n  const [pets, setPets] = useState([]);\n  const fetchPets = async () => {\n    const response = await fetch(\"http://localhost:8080/pets\");\n    const petJson = await response.json();\n    setPets(petJson);\n  };\n  useEffect(() => {\n    fetchPets();\n  }, []);\n  const postPet = async petDTO => {\n    const response = await fetch(\"http://localhost:8080/pets\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(petDTO)\n    });\n    const savedPet = await response.json();\n    setPets([...pets, savedPet]);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"My Pets\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AddPetForm, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: /*#__PURE__*/_jsxDEV(PetList, {\n        pets: pets\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(PetContainer, \"7RBAgWZCtqlXVpMU/6w9/5IUzu8=\");\n_c = PetContainer;\nexport default PetContainer;\nvar _c;\n$RefreshReg$(_c, \"PetContainer\");","map":{"version":3,"names":["useEffect","useState","AddPetForm","PetList","jsxDEV","_jsxDEV","Fragment","_Fragment","PetContainer","_s","pets","setPets","fetchPets","response","fetch","petJson","json","postPet","petDTO","method","headers","body","JSON","stringify","savedPet","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/leilapeltier/Documents/bnta_work/week09/day2/task_pets/pet_client/src/containers/PetContainer.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport AddPetForm from \"../components/AddPetForm\";\nimport PetList from \"../components/PetList\";\n\nconst PetContainer = () => {\n    const [pets, setPets] = useState([]);\n\n    const fetchPets = async () =>{\n        const response = await fetch(\"http://localhost:8080/pets\");\n        const petJson = await response.json();\n        setPets(petJson);\n    }\n\n    useEffect(() =>{\n        fetchPets();\n\n    },[])\n\n    const postPet = async (petDTO) =>{\n        const response = await fetch(\"http://localhost:8080/pets\", {\n            method: \"POST\",\n            headers: {\"Content-Type\": \"application/json\"},\n            body: JSON.stringify(petDTO)\n        });\n\n        const savedPet = await response.json();\n        setPets([...pets, savedPet])\n    }\n\n\n    return ( \n        <>\n        <header>\n        <h1>My Pets</h1>\n        <AddPetForm />\n        </header>\n        <main>\n            <PetList pets={pets}/>\n        </main>\n\n       \n       </>\n     );\n}\n \nexport default PetContainer;"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,OAAO,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE5C,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEpC,MAAMW,SAAS,GAAG,MAAAA,CAAA,KAAW;IACzB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,4BAA4B,CAAC;IAC1D,MAAMC,OAAO,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IACrCL,OAAO,CAACI,OAAO,CAAC;EACpB,CAAC;EAEDf,SAAS,CAAC,MAAK;IACXY,SAAS,CAAC,CAAC;EAEf,CAAC,EAAC,EAAE,CAAC;EAEL,MAAMK,OAAO,GAAG,MAAOC,MAAM,IAAI;IAC7B,MAAML,QAAQ,GAAG,MAAMC,KAAK,CAAC,4BAA4B,EAAE;MACvDK,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAC,cAAc,EAAE;MAAkB,CAAC;MAC7CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,MAAM;IAC/B,CAAC,CAAC;IAEF,MAAMM,QAAQ,GAAG,MAAMX,QAAQ,CAACG,IAAI,CAAC,CAAC;IACtCL,OAAO,CAAC,CAAC,GAAGD,IAAI,EAAEc,QAAQ,CAAC,CAAC;EAChC,CAAC;EAGD,oBACInB,OAAA,CAAAE,SAAA;IAAAkB,QAAA,gBACApB,OAAA;MAAAoB,QAAA,gBACApB,OAAA;QAAAoB,QAAA,EAAI;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAChBxB,OAAA,CAACH,UAAU;QAAAwB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eACTxB,OAAA;MAAAoB,QAAA,eACIpB,OAAA,CAACF,OAAO;QAACO,IAAI,EAAEA;MAAK;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpB,CAAC;EAAA,eAGN,CAAC;AAEV,CAAC;AAAApB,EAAA,CAvCKD,YAAY;AAAAsB,EAAA,GAAZtB,YAAY;AAyClB,eAAeA,YAAY;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}